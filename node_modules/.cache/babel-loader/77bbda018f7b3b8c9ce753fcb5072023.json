{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0cb944ac\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"thing-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"thing-list-item\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"There are no things.\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_thing_detail = _resolveComponent(\"thing-detail\");\n\n  const _component_base_card = _resolveComponent(\"base-card\");\n\n  return _openBlock(), _createBlock(_component_base_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchList && $options.fetchList(...args))\n    }, \"Refresh\"), $options.hasThings ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.things, (thing, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"thing-list-item\", {\n          'item-flagged': $options.isFlagged(thing.id)\n        }]),\n        onClick: $event => $options.selectThing(thing.id)\n      }, [_createElementVNode(\"p\", null, _toDisplayString(thing.name), 1\n      /* TEXT */\n      ), _createElementVNode(\"div\", null, [_createCommentVNode(\" can use v-on:click or @click \"), _createCommentVNode(\" .stop modifier to stop event bubbling \"), _createElementVNode(\"button\", {\n        onClick: _withModifiers($event => $options.removeThing(index), [\"stop\"])\n      }, \"Remove\", 8\n      /* PROPS */\n      , _hoisted_4), _createElementVNode(\"button\", {\n        onClick: _withModifiers($event => $options.flagThing(thing.id), [\"stop\"])\n      }, _toDisplayString($options.isFlagged(thing.id) ? 'Unflag' : 'Flag'), 9\n      /* TEXT, PROPS */\n      , _hoisted_5), $options.isSelected(thing.id) ? (_openBlock(), _createBlock(_component_thing_detail, {\n        key: 0,\n        thing: thing\n      }, null, 8\n      /* PROPS */\n      , [\"thing\"])) : _createCommentVNode(\"v-if\", true)])], 10\n      /* CLASS, PROPS */\n      , _hoisted_3);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8))])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;AAEaA,OAAK,EAAC;;;;;;;;;;AAyBKA,OAAK,EAAC;;;gEACdC,oBAA2B,GAA3B,EAA2B,IAA3B,EAAG,sBAAH,EAAuB;AAAA;AAAvB;;oBAAAC;;;;;;uBA3BZC,aA8BYC,oBA9BZ,EA8BY,IA9BZ,EA8BY;sBA7BR,MA4BM,CA5BNH,oBA4BM,KA5BN,cA4BM,CA3BFA,oBAA2C,QAA3C,EAA2C;AAAlCI,aAAK,yCAAEC,iDAAF;AAA6B,KAA3C,EAA2B,SAA3B,CA2BE,EA1BSA,oCAAXC,oBAsBM,KAtBN,EAsBMC,UAtBN,EAsBM,oBArBFD,oBAoBME,SApBN,EAoBM,IApBN,EAoBMC,YAnBuBC,YAmBvB,EAnB6B,CAAvBC,KAAuB,EAAhBC,KAAgB,KAAX;2BADxBN,oBAoBM,KApBN,EAoBM;AAlBDO,WAAG,EAAED,KAkBJ;AAjBFb,aAAK,mBAAC,iBAAD,EAAkB;AAAA,0BACGM,mBAAUM,KAAK,CAACG,EAAhB;AADH,SAAlB,EAiBH;AAfDV,eAAK,YAAEC,qBAAYM,KAAK,CAACG,EAAlB;AAeN,OApBN,GAOId,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBe,iBAAjBJ,KAAK,CAACK,IAAW,CAAvB,EAAgB;AAAA;AAAhB,SACAhB,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVFiB,qDAUE,EATFA,8DASE,EARFjB,oBAAwD,QAAxD,EAAwD;AAA/CI,eAAK,2BAAOC,qBAAYO,KAAZ,CAAP,EAAwB,QAAxB;AAA0C,OAAxD,EAAyC,QAAzC,EAA+C;AAAA;AAA/C,QAA+CM,UAA/C,CAQE,EAPFlB,oBAES,QAFT,EAES;AAFAI,eAAK,2BAAOC,mBAAUM,KAAK,CAACG,EAAhB,CAAP,EAAyB,QAAzB;AAEL,OAFT,mBACOT,mBAAUM,KAAK,CAACG,EAAhB,IAAkB,QAAlB,GAAkB,OADzB,EACyB;AAAA;AADzB,QACyBK,UADzB,CAOE,EAHQd,oBAAWM,KAAK,CAACG,EAAjB,mBADVZ,aAGiBkB,uBAHjB,EAGiB;cAAA;AADZT,aAAK,EAAEA;AACK,OAHjB;;AAAA,uDAIE,CAXN,EARJ;;AAAA;KAoBM,CApBN;;AAAA,KAqBE,EAtBN,oBAuBAL,oBAEM,KAFN,cAEMe,UAFN,EAGE,CA5BN,CA4BM,EACE;;;;AAAA,GA9BZ","names":["class","_createElementVNode","_hoisted_7","_createBlock","_component_base_card","onClick","$options","_createElementBlock","_hoisted_2","_Fragment","_renderList","$data","thing","index","key","id","_toDisplayString","name","_createCommentVNode","_hoisted_4","_hoisted_5","_component_thing_detail","_hoisted_8"],"sourceRoot":"","sources":["/Users/mhlengi.nkosi/sup-grads22-vue/src/components/ThingList.vue"],"sourcesContent":["<template>\n    <base-card>\n        <div class=\"thing-list\">\n            <button @click=\"fetchList\">Refresh</button>\n            <div v-if=\"hasThings\">\n                <div \n                    v-for=\"(thing, index) in things\" \n                    :key=\"index\"\n                    class=\"thing-list-item\"\n                    :class=\"{'item-flagged' : isFlagged(thing.id)}\"\n                    @click=\"selectThing(thing.id)\"\n                >\n                    <p>{{ thing.name }}</p>\n                    <div>\n                        <!-- can use v-on:click or @click -->\n                        <!-- .stop modifier to stop event bubbling -->\n                        <button @click.stop=\"removeThing(index)\">Remove</button>\n                        <button @click.stop=\"flagThing(thing.id)\">\n                            {{ isFlagged(thing.id) ? 'Unflag' : 'Flag' }}\n                        </button>\n                        <thing-detail \n                            v-if=\"isSelected(thing.id)\"\n                            :thing=\"thing\n                        \"></thing-detail>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"thing-list-item\">\n                <p>There are no things.</p>\n            </div>\n        </div>\n    </base-card>\n</template>\n\n<script>\nimport ThingDetail from './ThingDetail.vue'\nimport { getThings } from '../api/'\n\nexport default {\n    \n\tcomponents: { ThingDetail },\n    name: \"ThingList\",\n    data() {\n        return {\n            things: [],\n            flagged: [],\n            selectedId: null\n        }\n    },\n    mounted() {\n        this.fetchList()\n    },\n    computed: {\n        hasThings() {\n            return this.things.length > 0\n        }\n    },\n    methods: {\n        removeThing(index) {\n            // mutates the state and removes the thing\n            this.things.splice(index, 1)\n        },\n        flagThing(id) {\n            if (this.isFlagged(id)) {\n                this.flagged = this.flagged.filter( i => i !== id)\n            } else {\n                this.flagged.push(id)\n            }\n        },\n        isFlagged(id) {\n            return this.flagged.includes(id)\n        },\n        selectThing(id) {\n            this.selectedId = this.isSelected(id) ? null : id\n        },\n        isSelected(id) {\n            return this.selectedId === id\n        },\n        async fetchList() {\n            this.things = await getThings()\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .thing-list {\n        button {\n            min-width: 96px;\n            border-radius: 0px;\n            border: 1px solid darkgray;\n            outline: none;\n\n            &:hover {\n                background-color: white;\n            }\n            \n            border-radius: 12px;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n            padding: 1rem;\n            margin: 2rem auto;\n            max-width: 40rem;\n        }\n\n        display: flex;\n        flex-direction: column;\n        max-width: 512px;\n        border: 1px solid black;\n        \n        \n\n\n\n        .thing-list-item {\n            \n            display: flex;\n            flex-direction: column;\n            padding: 8px;\n            border-bottom: 1px solid darkgrey;\n\n            &:hover {\n                background:lightgrey;\n            }\n        }\n        .item-flagged {\n            background-color: lightpink;\n\n            &:hover {\n                background:lightcoral;\n            }\n        }\n    }\n</style>\n"]},"metadata":{},"sourceType":"module"}